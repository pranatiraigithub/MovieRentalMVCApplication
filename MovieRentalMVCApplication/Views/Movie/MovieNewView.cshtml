@model MovieRentalMVCApplication.ViewModels.NewMovieViewModel
@{
    /**/

    ViewBag.Title = "MovieNewView";
}

<h2>New/Update Movie</h2>

@using (Html.BeginForm("Save", "Movie"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.MovieName)
        @Html.TextBoxFor(m => m.Movie.MovieName, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.MovieName)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.NoOfCDs)
        @Html.TextBoxFor(m => m.Movie.NoOfCDs, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.NoOfCDs)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.ReleaseDate)
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.ReleaseDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.DateofAddingCD)
        @Html.TextBoxFor(m => m.Movie.DateofAddingCD, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.DateofAddingCD)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.GenreId)
        @Html.DropDownListFor(m => m.Movie.GenreId,
                                       new SelectList(Model.Genres, "Id", "GenreName"),
                                       "Select Genre Type",
                                       new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.Genre)
    </div>
    @Html.HiddenFor(m => m.Movie.Id)


    <button class="btn btn-primary" type="submit">Save</button>
    <button class="btn btn-primary" type="button">
    @Html.ActionLink("Back", "Index", null, new { @style = "color: white; text-decoration:none" })</button>

}